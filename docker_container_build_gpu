#!/bin/bash

# Default value is 0 if no argument is provided
NUM=${1:-0}

DEV_CONTAINER="fillgaps_dev_gpu_${NUM}"

# Check if the container exists
if [ "$(docker ps -aq -f name=^${DEV_CONTAINER}$)" ]; then
    echo "${DEV_CONTAINER} already exists ... recreating a new one"
    docker stop ${DEV_CONTAINER}
    docker rm ${DEV_CONTAINER}
fi

## define volumes to be mounted
ROOT=$(pwd)
DATAPATH=$(dirname $(dirname $(pwd)))/Data
BINPATH=${ROOT}/fillgaps
EXPPATH=${ROOT}/experiments
RESULTSPATH=${ROOT}/results

## define mount destination
ROOTDESTPATH=/home/Connectonome/FillGaps
DATADESTPATH=/home/Connectonome/Data
BINDESTPATH=${ROOTDESTPATH}/fillgaps
EXPDISTPATH=${ROOTDESTPATH}/experiments
RESULTSDISTPATH=${ROOTDESTPATH}/results

user="${USER}"

## build container
docker run -itd \
  --gpus "device=${NUM}" \
  -e NVIDIA_VISIBLE_DEVICES=all \
  -e DOCKER_USER="${user}" \
  -e USER="${user}" \
  --name "${DEV_CONTAINER}" \
  --hostname $HOSTNAME'_DOCKER_'${NUM} \
  -v ${DATAPATH}:${DATADESTPATH} \
  -v ${BINPATH}:${BINDESTPATH} \
  -v ${EXPPATH}:${EXPDISTPATH} \
  -v ${RESULTSPATH}:${RESULTSDISTPATH} \
  -it fillgaps:latest \
  /bin/bash

# Add input prompt here
read -p "Do you want to enter the Docker container? (Y/n) " answer
case ${answer:0:1} in
    y|Y )
        docker exec -it ${DEV_CONTAINER} bash
    ;;
    * )
        echo "Skipping entering the container."
    ;;
esac
